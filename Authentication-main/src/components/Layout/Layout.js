// import { Link, useHistory } from 'react-router-dom';
// import { useAuth } from '../../store/auth-context';
// import classes from './Layout.module.css';

// const Layout = (props) => {
//   const authCtx = useAuth();
//   const history = useHistory();

//   const logoutHandler = () => {
//     authCtx.logout();
//     history.replace('/auth');
//   };

//   return (
//     <div>
//       <header className={classes.header}>
//         <Link to='/'>Home</Link>
//         {authCtx.isLoggedIn && <Link to='/profile'>Profile</Link>}
//         {authCtx.isLoggedIn && <button onClick={logoutHandler} className={classes.logout}>Logout</button>}
//       </header>
//       <main>{props.children}</main>
//     </div>
//   );
// };

// export default Layout;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Token Storage Example</title>
</head>
<body>
    <h1>Token Storage Example</h1>
    <button onclick="simulateLogin()">Login</button>
    <button onclick="simulateLogout()">Logout</button>
    <script>
        // Simulate login and store the token
        function simulateLogin() {
            const token = '1430d60'; // This would be generated by your authentication system
            loginUser(token);
            alert('Logged in and token stored!');
        }

        // Simulate logout and clear the token
        function simulateLogout() {
            logoutUser();
            alert('Logged out and token cleared!');
        }

        // Store the token in localStorage
        function loginUser(token) {
            localStorage.setItem('userToken', token);
        }

        // Clear the token from localStorage
        function logoutUser() {
            localStorage.removeItem('userToken');
        }

        // Load the token from localStorage on page load
        function loadToken() {
            const token = localStorage.getItem('userToken');
            if (token) {
                console.log('Token loaded:', token);
            } else {
                console.log('No token found');
            }
        }

        // Call loadToken when the page loads
        window.onload = loadToken;
    </script>
</body>
</html>
